stages:
  - build_dev
  - test
  - qa
  - build_prod
  - push_prod

# with docker-compose and make already installed on the worker
# export http_proxy=http://172.17.0.1:3128 && apt update && apt install -y python-pip make && pip --proxy http://172.17.0.1:3128 install docker-compose

build_dev:
  stage: build_dev
  before_script:
    - export http_proxy=http://172.17.0.1:3128 && apk update && apk add py-pip make && pip --proxy http://172.17.0.1:3128 install docker-compose
  script:
    - make runTest
  after_script:
    - make clean

test_image:
  stage: test
  before_script:
    - export http_proxy=http://172.17.0.1:3128 && apk update && apk add py-pip make && pip --proxy http://172.17.0.1:3128 install docker-compose
    - export PROJECT=plateforme
  script:
    - make runTest
    - make test
    - docker cp ${PROJECT}_server:/usr/app/coverage $PWD
  after_script:
    - make clean
  artifacts:
    name: "Coverage:${CI_COMMIT_SHA:0:8}"
    paths:
      - coverage/*
    expire_in: 1 week

sonarqube:
  stage: qa  
  image: newtmitch/sonar-scanner:latest
  before_script:
    - export PROJECT=plateforme
  script:
  #  - sed -i 's|SF:/usr/app/|SF:|g' coverage/lcov.info #ugly patch to make the path relative
    - sonar-scanner -Dsonar.projectName=$PROJECT -Dsonar.projectKey=$PROJECT -Dsonar.exclusions=test/**/*,coverage/**/* -Dsonar.host.url=http://10.1.48.103:9000 -Dsonar.login=admin -Dsonar.password=admin -Dsonar.projectVersion=$CI_BUILD_ID -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info -Dsonar.projectBaseDir=$PWD #-Dsonar.branch=$CI_BUILD_REF_NAME
  
build_prod:
  stage: build_prod
  before_script:
    - export http_proxy=http://172.17.0.1:3128 && apk update && apk add py-pip make && pip --proxy http://172.17.0.1:3128 install docker-compose
  script:
    - make runProd
  after_script:
    - make clean
 
push_prod:
    stage: push_prod
    before_script:
      - export PROJECT=plateforme
    script:
      - docker build -t ${PROJECT}_server:${CI_COMMIT_SHA:0:8} -f ./Dockerfile-prod .
      - docker login -u gitlab  -p gitlab 10.1.48.103:18079
      - docker tag ${PROJECT}_server:${CI_COMMIT_SHA:0:8} 10.1.48.103:18079/${PROJECT}_server:latest
      - docker tag ${PROJECT}_server:${CI_COMMIT_SHA:0:8} 10.1.48.103:18079/${PROJECT}_server:${CI_COMMIT_SHA:0:8}
      - docker push 10.1.48.103:18079/${PROJECT}_server:${CI_COMMIT_SHA:0:8}
      - docker push 10.1.48.103:18079/${PROJECT}_server:latest
    after_script:
      - export PROJECT=plateforme
      - docker rmi -f ${PROJECT}_server:${CI_COMMIT_SHA:0:8}
      - docker rmi -f 10.1.48.103:18079/${PROJECT}_server:${CI_COMMIT_SHA:0:8}
      - docker rmi -f 10.1.48.103:18079/${PROJECT}_server:latest
